import { NextResponse } from 'next/server';

export async function POST(request: Request) {
  try {
    const body = await request.json();
    const { selectedOption, currentDialogue, characterName } = body;

    console.log('API received:', { selectedOption, currentDialogue, characterName });

    // --- Placeholder AI Interaction Logic ---
    // In a real implementation, you would call your AI service here (e.g., Perplexity, OpenAI)
    // using the received data to get the next dialogue, options, and potentially updated character name.

    let nextDialogue = `The character ponders your choice: "${selectedOption}". What will happen next?`;
    let nextOptions = ['Continue exploring', 'Ask another question'];
    const nextCharacterName = characterName; // Keep the name the same for now

    // --- Replace Placeholder with AI-Generated Content ---
    // Use the response generated by Perplexity for the specific path
    if (selectedOption === 'Ask about this place') {
      nextDialogue = "This realm breathes between secondsâ€”a crossroads for those who dare question the threads binding fate. Tell me, traveler... do you seek answers, or merely shadows of them?";
      nextOptions = [
        "What ancient power shaped these ruins?",
        "Why does your voice echo like forgotten memories?",
        "Show me the 'threads' you speak of."
      ];
    } else if (selectedOption === 'Remain silent') {
      // Keep other placeholder logic for now
      nextDialogue = 'Silence... A choice as well. The air grows heavy with unspoken thoughts.';
      nextOptions = ['Observe surroundings', 'Speak up now'];
    } else if (selectedOption === 'Next...') {
        nextDialogue = 'And so the journey progresses...';
        nextOptions = ['Look around', 'Check inventory (not implemented)'];
    }

    // --- End Placeholder Logic ---

    return NextResponse.json({
      dialogue: nextDialogue,
      options: nextOptions,
      characterName: nextCharacterName,
    });

  } catch (error) {
    console.error('API Error:', error);
    return NextResponse.json({ error: 'Failed to process interaction' }, { status: 500 });
  }
}
